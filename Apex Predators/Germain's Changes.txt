1. Initial commit of core 3d unity template
- Created new unity project using 3D core template

2. ReCommit of unity project with new name and included gitignore
- Deleted old unity project from repository
- Created new unity project with new name based off oganization input
- Made sure gitignore was in the correct base Unity folder this time before commiting and pushing changes

3. Added Oculus VR support & player prefab
- Switched platform to Android
- Added XR Plugin Management for Oculus
- Imported Oculus Integration Package
- Added Player GameObject as a prefab
	> Audio Listener Component - Allows the player to hear audio sources (game sounds)
	> OVRPlayerController - Provides movement for the player
		> OVRCameraRig - Provides VR camera head and hand tracking for the player & Also contains left and right controller prefabs
	> Custom Head model

4. Added Voice Communication for participants & Improved Hierarchy organization
- Imported PhotonVoice 2 Package
- Created new Photon Voice App ID
- Added VoiceManager GameObject
	> Voice GameObject
		> VoiceManager(Script)
		> Speaker (Prefab)
	> Text mesh pro 3D UI to display voice chat status messages
	> MicIndicator GameObject to show user if their mic was toggled on or off
- Added dividers to the scene Hierarchy for better hierarchy

5. Added Lobby & Arena, skyboxes, portal prefab and mirror prefab
- Created foundations for Lobby and Arena areas
	> Sperate areas with different groundMaterials and Skybox
- Added Skyboxes for the lobby and arena
	> used two 360 panoramic images from - https://skybox.blockadelabs.com/
	> unlit shader that has culling turned off
	> ArenaSkyboxMaterial and LobbySkyboxMaterial
	> added two huge spheres and applied the skybox materials
- Created Portal prefab
	> Uses camera and render texture to allow user to see whats on the other side of the portal
	> Contains:
		> Door (Cube) - for 3D mesh
		> ProjectionPlane (Plane) - for displaying render texture material
		> PortalCamera (Camera) - used to create a render texture that other portals can use to display this portals destination
- Created Mirror prefab
	> Uses camera and render texture to produce mirror functionality

6. Integrated functionality to portals and created starter prefabs for the Earth Wall and Earth Projectile
- Added functionality to portals 
	> Removed skybox sphere colliders (everything in the play area was colliding with it).
	> Added Portal script to teleport any object entering a portal to the other portal.
	> Improved portal prefab to include trigger box and teleport location
- Created the starting prefabs for the EarthWall and EarthProjectile
	> EarthWall - 3D cube, RigidBody, WallMaterial, Script
	> EarthProjectile - 3D shphere, RigidBody, ProjectileMaterial

7. Added EarthBending powers (EarthProjectile, EarthWall) using controller gestures (trigger balls)
- Added 3D GestureRecognition third party tool (MiVRy)
	> Created Gestures for abilities using the GestureManager
	> Hooked up abilitys to specific gestures detected using the GestureEventProcessor (gameObject and script)
	> NOTE - NOT USING THIS TOOL AS THE LICENSING WAS PREVENTING USAGE, HENCE NEW GESTURE METHODS BELOW.
- Player
	> Added CollisionManager with CollisionsManagement (script)
	> Added EntitiySpawnLocation Game Object
- Controllers
	> Added ControllerCollisions (Script) to detect collisions
	> Added sphere collider & set to Is Trigger
- Added gesture trigger balls to player
	> Each have sphere collider(Is Trigger) and Rigidbody(IsKinematic)
	> Have transparent Gesture Material
	> EarthProjectile Gesture - ONE BALL placed at right hip level
	> EarthWall Gesture - TWO BALLS placed up high above player head
- MISC
	> Gave ground planes a "Ground" tag

8. Polished the scene and updated/added some prefabs
- Added ProjectileSwitch prefab
- Fixed mirror reflection being fliped the wrong way
- Updated some prefabs and added the ProjectileDefence prefab
- Simplified and polished the two areas (Lobby & Arena) in the scene